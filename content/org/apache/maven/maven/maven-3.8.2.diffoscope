target/reference/apache-maven-3.8.2-src.zip apache-maven/target/apache-maven-3.8.2-src.zip
--- target/reference/apache-maven-3.8.2-src.zip
+++ apache-maven/target/apache-maven-3.8.2-src.zip
├── zipinfo {}
│ @@ -1,8 +1,8 @@
│ -Zip file size: 4614777 bytes, number of entries: 3457
│ +Zip file size: 4614817 bytes, number of entries: 3457
│  drwxr-xr-x  2.0 unx        0 b- stor 21-Aug-04 18:57 apache-maven-3.8.2/
│  drwxr-xr-x  2.0 unx        0 b- stor 21-Aug-04 18:57 apache-maven-3.8.2/.github/
│  drwxr-xr-x  2.0 unx        0 b- stor 21-Aug-04 18:57 apache-maven-3.8.2/apache-maven/
│  drwxr-xr-x  2.0 unx        0 b- stor 21-Aug-04 18:57 apache-maven-3.8.2/apache-maven/src/
│  drwxr-xr-x  2.0 unx        0 b- stor 21-Aug-04 18:57 apache-maven-3.8.2/apache-maven/src/bin/
│  drwxr-xr-x  2.0 unx        0 b- stor 21-Aug-04 18:57 apache-maven-3.8.2/apache-maven/src/conf/
│  drwxr-xr-x  2.0 unx        0 b- stor 21-Aug-04 18:57 apache-maven-3.8.2/apache-maven/src/conf/logging/
│ @@ -1433,19 +1433,19 @@
│  -rw-r--r--  2.0 unx     7448 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/Jenkinsfile
│  -rw-r--r--  2.0 unx    11560 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/LICENSE
│  -rw-r--r--  2.0 unx      171 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/NOTICE
│  -rw-r--r--  2.0 unx     4206 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/README.md
│  -rw-r--r--  2.0 unx     2612 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/apache-maven/README.txt
│  -rw-r--r--  2.0 unx    10582 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/apache-maven/pom.xml
│  -rw-r--r--  2.0 unx      228 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/apache-maven/src/bin/m2.conf
│ --rw-r--r--  2.0 unx     5703 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/apache-maven/src/bin/mvn
│ +-rw-r--r--  2.0 unx     5904 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/apache-maven/src/bin/mvn
│  -rw-r--r--  2.0 unx     6165 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/apache-maven/src/bin/mvn.cmd
│ --rw-r--r--  2.0 unx     1601 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/apache-maven/src/bin/mvnDebug
│ +-rw-r--r--  2.0 unx     1636 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/apache-maven/src/bin/mvnDebug
│  -rw-r--r--  2.0 unx     2082 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/apache-maven/src/bin/mvnDebug.cmd
│ --rw-r--r--  2.0 unx     1532 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/apache-maven/src/bin/mvnyjp
│ +-rw-r--r--  2.0 unx     1567 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/apache-maven/src/bin/mvnyjp
│  -rw-r--r--  2.0 unx     1551 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/apache-maven/src/conf/logging/simplelogger.properties
│  -rw-r--r--  2.0 unx    10742 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/apache-maven/src/conf/settings.xml
│  -rw-r--r--  2.0 unx     3747 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/apache-maven/src/conf/toolchains.xml
│  -rw-r--r--  2.0 unx      154 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/apache-maven/src/lib/ext/README.txt
│  -rw-r--r--  2.0 unx     3941 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/apache-maven/src/main/appended-resources/META-INF/LICENSE.vm
│  -rw-r--r--  2.0 unx     5783 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/apache-maven/src/main/appended-resources/META-INF/NOTICE.vm
│  -rw-r--r--  2.0 unx    11560 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/apache-maven/src/main/appended-resources/licenses/ASL-2.0.txt
│ @@ -3452,8 +3452,8 @@
│  -rw-r--r--  2.0 unx     1434 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/maven-slf4j-provider/src/site/site.xml
│  -rw-r--r--  2.0 unx    26935 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/pom.xml
│  -rw-r--r--  2.0 unx   104566 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/src/site/resources/images/maven-deps.png
│  -rw-r--r--  2.0 unx     2715 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/src/site/site.xml
│  -rw-r--r--  2.0 unx     5555 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/src/site/xdoc/index.xml
│  -rw-r--r--  2.0 unx    19887 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/src/site/xdoc/maven-deps.odg
│  -rw-r--r--  2.0 unx    10157 b- defN 21-Aug-04 18:57 apache-maven-3.8.2/DEPENDENCIES
│ -3457 files, 8834081 bytes uncompressed, 3665107 bytes compressed:  58.5%
│ +3457 files, 8834352 bytes uncompressed, 3665147 bytes compressed:  58.5%
├── apache-maven-3.8.2/apache-maven/src/bin/mvn
│ @@ -1,201 +1,201 @@
│ -#!/bin/sh
│ -
│ -# Licensed to the Apache Software Foundation (ASF) under one
│ -# or more contributor license agreements.  See the NOTICE file
│ -# distributed with this work for additional information
│ -# regarding copyright ownership.  The ASF licenses this file
│ -# to you under the Apache License, Version 2.0 (the
│ -# "License"); you may not use this file except in compliance
│ -# with the License.  You may obtain a copy of the License at
│ -#
│ -#    http://www.apache.org/licenses/LICENSE-2.0
│ -#
│ -# Unless required by applicable law or agreed to in writing,
│ -# software distributed under the License is distributed on an
│ -# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
│ -# KIND, either express or implied.  See the License for the
│ -# specific language governing permissions and limitations
│ -# under the License.
│ -
│ -# -----------------------------------------------------------------------------
│ -# Apache Maven Startup Script
│ -#
│ -# Environment Variable Prerequisites
│ -#
│ -#   JAVA_HOME       Must point at your Java Development Kit installation.
│ -#   MAVEN_OPTS      (Optional) Java runtime options used when Maven is executed.
│ -#   MAVEN_SKIP_RC   (Optional) Flag to disable loading of mavenrc files.
│ -# -----------------------------------------------------------------------------
│ -
│ -if [ -z "$MAVEN_SKIP_RC" ] ; then
│ -
│ -  if [ -f /usr/local/etc/mavenrc ] ; then
│ -    . /usr/local/etc/mavenrc
│ -  fi
│ -
│ -  if [ -f /etc/mavenrc ] ; then
│ -    . /etc/mavenrc
│ -  fi
│ -
│ -  if [ -f "$HOME/.mavenrc" ] ; then
│ -    . "$HOME/.mavenrc"
│ -  fi
│ -
│ -fi
│ -
│ -# OS specific support. $var _must_ be set to either true or false.
│ -cygwin=false;
│ -mingw=false;
│ -case "`uname`" in
│ -  CYGWIN*) cygwin=true;;
│ -  MINGW*) mingw=true;;
│ -esac
│ -
│ -## resolve links - $0 may be a link to Maven's home
│ -PRG="$0"
│ -
│ -# need this for relative symlinks
│ -while [ -h "$PRG" ] ; do
│ -  ls=`ls -ld "$PRG"`
│ -  link=`expr "$ls" : '.*-> \(.*\)$'`
│ -  if expr "$link" : '/.*' > /dev/null; then
│ -    PRG="$link"
│ -  else
│ -    PRG="`dirname "$PRG"`/$link"
│ -  fi
│ -done
│ -
│ -saveddir=`pwd`
│ -
│ -MAVEN_HOME=`dirname "$PRG"`/..
│ -
│ -# make it fully qualified
│ -MAVEN_HOME=`cd "$MAVEN_HOME" && pwd`
│ -
│ -cd "$saveddir"
│ -
│ -# For Cygwin, ensure paths are in Unix format before anything is touched
│ -if $cygwin ; then
│ -  [ -n "$MAVEN_HOME" ] &&
│ -    MAVEN_HOME=`cygpath --unix "$MAVEN_HOME"`
│ -  [ -n "$JAVA_HOME" ] &&
│ -    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
│ -  [ -n "$CLASSPATH" ] &&
│ -    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
│ -fi
│ -
│ -# For MinGW, ensure paths are in Unix format before anything is touched
│ -if $mingw ; then
│ -  [ -n "$MAVEN_HOME" ] &&
│ -    MAVEN_HOME=`(cd "$MAVEN_HOME"; pwd)`
│ -  [ -n "$JAVA_HOME" ] &&
│ -    JAVA_HOME=`(cd "$JAVA_HOME"; pwd)`
│ -  # TODO classpath?
│ -fi
│ -
│ -if [ -z "$JAVA_HOME" ] ; then
│ -  JAVACMD=`which java`
│ -else
│ -  JAVACMD="$JAVA_HOME/bin/java"
│ -fi
│ -
│ -if [ ! -x "$JAVACMD" ] ; then
│ -  echo "The JAVA_HOME environment variable is not defined correctly," >&2
│ -  echo "this environment variable is needed to run this program." >&2
│ -  exit 1
│ -fi
│ -
│ -CLASSWORLDS_JAR=`echo "${MAVEN_HOME}"/boot/plexus-classworlds-*.jar`
│ -CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher
│ -
│ -# For Cygwin, switch paths to Windows format before running java
│ -if $cygwin ; then
│ -  [ -n "$MAVEN_HOME" ] &&
│ -    MAVEN_HOME=`cygpath --path --windows "$MAVEN_HOME"`
│ -  [ -n "$JAVA_HOME" ] &&
│ -    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
│ -  [ -n "$CLASSPATH" ] &&
│ -    CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
│ -  [ -n "$CLASSWORLDS_JAR" ] &&
│ -    CLASSWORLDS_JAR=`cygpath --path --windows "$CLASSWORLDS_JAR"`
│ -fi
│ -
│ -# traverses directory structure from process work directory to filesystem root
│ -# first directory with .mvn subdirectory is considered project base directory
│ -find_maven_basedir() {
│ -(
│ -  basedir=`find_file_argument_basedir "$@"`
│ -  wdir="${basedir}"
│ -  while [ "$wdir" != '/' ] ; do
│ -    if [ -d "$wdir"/.mvn ] ; then
│ -      basedir=$wdir
│ -      break
│ -    fi
│ -    wdir=`cd "$wdir/.."; pwd`
│ -  done
│ -  echo "${basedir}"
│ -)
│ -}
│ -
│ -find_file_argument_basedir() {
│ -(
│ -  basedir=`pwd`
│ -
│ -  found_file_switch=0
│ -  for arg in "$@"; do
│ -    if [ ${found_file_switch} -eq 1 ]; then
│ -      if [ -d "${arg}" ]; then
│ -        basedir=`cd "${arg}" && pwd -P`
│ -      elif [ -f "${arg}" ]; then
│ -        basedir=`dirname "${arg}"`
│ -        basedir=`cd "${basedir}" && pwd -P`
│ -        if [ ! -d "${basedir}" ]; then
│ -          echo "Directory ${basedir} extracted from the -f/--file command-line argument ${arg} does not exist" >&2
│ -          exit 1
│ -        fi
│ -      else
│ -        echo "POM file ${arg} specified with the -f/--file command line argument does not exist" >&2
│ -        exit 1
│ -      fi
│ -      break
│ -    fi
│ -    if [ "$arg" = "-f" -o "$arg" = "--file" ]; then
│ -      found_file_switch=1
│ -    fi
│ -  done
│ -  echo "${basedir}"
│ -)
│ -}
│ -
│ -# concatenates all lines of a file
│ -concat_lines() {
│ -  if [ -f "$1" ]; then
│ -    echo "`tr -s '\r\n' '  ' < "$1"`"
│ -  fi
│ -}
│ -
│ -MAVEN_PROJECTBASEDIR="${MAVEN_BASEDIR:-`find_maven_basedir "$@"`}"
│ -MAVEN_OPTS="`concat_lines "$MAVEN_PROJECTBASEDIR/.mvn/jvm.config"` $MAVEN_OPTS"
│ -
│ -# For Cygwin, switch project base directory path to Windows format before
│ -# executing Maven otherwise this will cause Maven not to consider it.
│ -if $cygwin ; then
│ -  [ -n "$MAVEN_PROJECTBASEDIR" ] &&
│ -  MAVEN_PROJECTBASEDIR=`cygpath --path --windows "$MAVEN_PROJECTBASEDIR"`
│ -fi
│ -
│ -export MAVEN_PROJECTBASEDIR
│ -
│ -# Provide a "standardized" way to retrieve the CLI args that will
│ -# work with both Windows and non-Windows executions.
│ -MAVEN_CMD_LINE_ARGS="$MAVEN_CONFIG $@"
│ -export MAVEN_CMD_LINE_ARGS
│ -
│ -exec "$JAVACMD" \
│ -  $MAVEN_OPTS \
│ -  $MAVEN_DEBUG_OPTS \
│ -  -classpath "${CLASSWORLDS_JAR}" \
│ -  "-Dclassworlds.conf=${MAVEN_HOME}/bin/m2.conf" \
│ -  "-Dmaven.home=${MAVEN_HOME}" \
│ -  "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" \
│ -  ${CLASSWORLDS_LAUNCHER} "$@"
│ +#!/bin/sh
│ +
│ +# Licensed to the Apache Software Foundation (ASF) under one
│ +# or more contributor license agreements.  See the NOTICE file
│ +# distributed with this work for additional information
│ +# regarding copyright ownership.  The ASF licenses this file
│ +# to you under the Apache License, Version 2.0 (the
│ +# "License"); you may not use this file except in compliance
│ +# with the License.  You may obtain a copy of the License at
│ +#
│ +#    http://www.apache.org/licenses/LICENSE-2.0
│ +#
│ +# Unless required by applicable law or agreed to in writing,
│ +# software distributed under the License is distributed on an
│ +# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
│ +# KIND, either express or implied.  See the License for the
│ +# specific language governing permissions and limitations
│ +# under the License.
│ +
│ +# -----------------------------------------------------------------------------
│ +# Apache Maven Startup Script
│ +#
│ +# Environment Variable Prerequisites
│ +#
│ +#   JAVA_HOME       Must point at your Java Development Kit installation.
│ +#   MAVEN_OPTS      (Optional) Java runtime options used when Maven is executed.
│ +#   MAVEN_SKIP_RC   (Optional) Flag to disable loading of mavenrc files.
│ +# -----------------------------------------------------------------------------
│ +
│ +if [ -z "$MAVEN_SKIP_RC" ] ; then
│ +
│ +  if [ -f /usr/local/etc/mavenrc ] ; then
│ +    . /usr/local/etc/mavenrc
│ +  fi
│ +
│ +  if [ -f /etc/mavenrc ] ; then
│ +    . /etc/mavenrc
│ +  fi
│ +
│ +  if [ -f "$HOME/.mavenrc" ] ; then
│ +    . "$HOME/.mavenrc"
│ +  fi
│ +
│ +fi
│ +
│ +# OS specific support. $var _must_ be set to either true or false.
│ +cygwin=false;
│ +mingw=false;
│ +case "`uname`" in
│ +  CYGWIN*) cygwin=true;;
│ +  MINGW*) mingw=true;;
│ +esac
│ +
│ +## resolve links - $0 may be a link to Maven's home
│ +PRG="$0"
│ +
│ +# need this for relative symlinks
│ +while [ -h "$PRG" ] ; do
│ +  ls=`ls -ld "$PRG"`
│ +  link=`expr "$ls" : '.*-> \(.*\)$'`
│ +  if expr "$link" : '/.*' > /dev/null; then
│ +    PRG="$link"
│ +  else
│ +    PRG="`dirname "$PRG"`/$link"
│ +  fi
│ +done
│ +
│ +saveddir=`pwd`
│ +
│ +MAVEN_HOME=`dirname "$PRG"`/..
│ +
│ +# make it fully qualified
│ +MAVEN_HOME=`cd "$MAVEN_HOME" && pwd`
│ +
│ +cd "$saveddir"
│ +
│ +# For Cygwin, ensure paths are in Unix format before anything is touched
│ +if $cygwin ; then
│ +  [ -n "$MAVEN_HOME" ] &&
│ +    MAVEN_HOME=`cygpath --unix "$MAVEN_HOME"`
│ +  [ -n "$JAVA_HOME" ] &&
│ +    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
│ +  [ -n "$CLASSPATH" ] &&
│ +    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
│ +fi
│ +
│ +# For MinGW, ensure paths are in Unix format before anything is touched
│ +if $mingw ; then
│ +  [ -n "$MAVEN_HOME" ] &&
│ +    MAVEN_HOME=`(cd "$MAVEN_HOME"; pwd)`
│ +  [ -n "$JAVA_HOME" ] &&
│ +    JAVA_HOME=`(cd "$JAVA_HOME"; pwd)`
│ +  # TODO classpath?
│ +fi
│ +
│ +if [ -z "$JAVA_HOME" ] ; then
│ +  JAVACMD=`which java`
│ +else
│ +  JAVACMD="$JAVA_HOME/bin/java"
│ +fi
│ +
│ +if [ ! -x "$JAVACMD" ] ; then
│ +  echo "The JAVA_HOME environment variable is not defined correctly," >&2
│ +  echo "this environment variable is needed to run this program." >&2
│ +  exit 1
│ +fi
│ +
│ +CLASSWORLDS_JAR=`echo "${MAVEN_HOME}"/boot/plexus-classworlds-*.jar`
│ +CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher
│ +
│ +# For Cygwin, switch paths to Windows format before running java
│ +if $cygwin ; then
│ +  [ -n "$MAVEN_HOME" ] &&
│ +    MAVEN_HOME=`cygpath --path --windows "$MAVEN_HOME"`
│ +  [ -n "$JAVA_HOME" ] &&
│ +    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
│ +  [ -n "$CLASSPATH" ] &&
│ +    CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
│ +  [ -n "$CLASSWORLDS_JAR" ] &&
│ +    CLASSWORLDS_JAR=`cygpath --path --windows "$CLASSWORLDS_JAR"`
│ +fi
│ +
│ +# traverses directory structure from process work directory to filesystem root
│ +# first directory with .mvn subdirectory is considered project base directory
│ +find_maven_basedir() {
│ +(
│ +  basedir=`find_file_argument_basedir "$@"`
│ +  wdir="${basedir}"
│ +  while [ "$wdir" != '/' ] ; do
│ +    if [ -d "$wdir"/.mvn ] ; then
│ +      basedir=$wdir
│ +      break
│ +    fi
│ +    wdir=`cd "$wdir/.."; pwd`
│ +  done
│ +  echo "${basedir}"
│ +)
│ +}
│ +
│ +find_file_argument_basedir() {
│ +(
│ +  basedir=`pwd`
│ +
│ +  found_file_switch=0
│ +  for arg in "$@"; do
│ +    if [ ${found_file_switch} -eq 1 ]; then
│ +      if [ -d "${arg}" ]; then
│ +        basedir=`cd "${arg}" && pwd -P`
│ +      elif [ -f "${arg}" ]; then
│ +        basedir=`dirname "${arg}"`
│ +        basedir=`cd "${basedir}" && pwd -P`
│ +        if [ ! -d "${basedir}" ]; then
│ +          echo "Directory ${basedir} extracted from the -f/--file command-line argument ${arg} does not exist" >&2
│ +          exit 1
│ +        fi
│ +      else
│ +        echo "POM file ${arg} specified with the -f/--file command line argument does not exist" >&2
│ +        exit 1
│ +      fi
│ +      break
│ +    fi
│ +    if [ "$arg" = "-f" -o "$arg" = "--file" ]; then
│ +      found_file_switch=1
│ +    fi
│ +  done
│ +  echo "${basedir}"
│ +)
│ +}
│ +
│ +# concatenates all lines of a file
│ +concat_lines() {
│ +  if [ -f "$1" ]; then
│ +    echo "`tr -s '\r\n' '  ' < "$1"`"
│ +  fi
│ +}
│ +
│ +MAVEN_PROJECTBASEDIR="${MAVEN_BASEDIR:-`find_maven_basedir "$@"`}"
│ +MAVEN_OPTS="`concat_lines "$MAVEN_PROJECTBASEDIR/.mvn/jvm.config"` $MAVEN_OPTS"
│ +
│ +# For Cygwin, switch project base directory path to Windows format before
│ +# executing Maven otherwise this will cause Maven not to consider it.
│ +if $cygwin ; then
│ +  [ -n "$MAVEN_PROJECTBASEDIR" ] &&
│ +  MAVEN_PROJECTBASEDIR=`cygpath --path --windows "$MAVEN_PROJECTBASEDIR"`
│ +fi
│ +
│ +export MAVEN_PROJECTBASEDIR
│ +
│ +# Provide a "standardized" way to retrieve the CLI args that will
│ +# work with both Windows and non-Windows executions.
│ +MAVEN_CMD_LINE_ARGS="$MAVEN_CONFIG $@"
│ +export MAVEN_CMD_LINE_ARGS
│ +
│ +exec "$JAVACMD" \
│ +  $MAVEN_OPTS \
│ +  $MAVEN_DEBUG_OPTS \
│ +  -classpath "${CLASSWORLDS_JAR}" \
│ +  "-Dclassworlds.conf=${MAVEN_HOME}/bin/m2.conf" \
│ +  "-Dmaven.home=${MAVEN_HOME}" \
│ +  "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" \
│ +  ${CLASSWORLDS_LAUNCHER} "$@"
├── apache-maven-3.8.2/apache-maven/src/bin/mvnDebug
│ @@ -1,35 +1,35 @@
│ -#!/bin/sh
│ -
│ -# Licensed to the Apache Software Foundation (ASF) under one
│ -# or more contributor license agreements.  See the NOTICE file
│ -# distributed with this work for additional information
│ -# regarding copyright ownership.  The ASF licenses this file
│ -# to you under the Apache License, Version 2.0 (the
│ -# "License"); you may not use this file except in compliance
│ -# with the License.  You may obtain a copy of the License at
│ -#
│ -#    http://www.apache.org/licenses/LICENSE-2.0
│ -#
│ -# Unless required by applicable law or agreed to in writing,
│ -# software distributed under the License is distributed on an
│ -# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
│ -# KIND, either express or implied.  See the License for the
│ -# specific language governing permissions and limitations
│ -# under the License.
│ -
│ -# -----------------------------------------------------------------------------
│ -# Apache Maven Debug Script
│ -#
│ -# Environment Variable Prerequisites
│ -#
│ -#   JAVA_HOME           Must point at your Java Development Kit installation.
│ -#   MAVEN_OPTS          (Optional) Java runtime options used when Maven is executed.
│ -#   MAVEN_SKIP_RC       (Optional) Flag to disable loading of mavenrc files.
│ -#   MAVEN_DEBUG_ADDRESS (Optional) Set the debug address. Default value is 8000
│ -# -----------------------------------------------------------------------------
│ -
│ -MAVEN_DEBUG_OPTS="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=${MAVEN_DEBUG_ADDRESS:-8000}"
│ -
│ -echo Preparing to execute Maven in debug mode
│ -
│ -env MAVEN_OPTS="$MAVEN_OPTS" MAVEN_DEBUG_OPTS="$MAVEN_DEBUG_OPTS" "`dirname "$0"`/mvn" "$@"
│ +#!/bin/sh
│ +
│ +# Licensed to the Apache Software Foundation (ASF) under one
│ +# or more contributor license agreements.  See the NOTICE file
│ +# distributed with this work for additional information
│ +# regarding copyright ownership.  The ASF licenses this file
│ +# to you under the Apache License, Version 2.0 (the
│ +# "License"); you may not use this file except in compliance
│ +# with the License.  You may obtain a copy of the License at
│ +#
│ +#    http://www.apache.org/licenses/LICENSE-2.0
│ +#
│ +# Unless required by applicable law or agreed to in writing,
│ +# software distributed under the License is distributed on an
│ +# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
│ +# KIND, either express or implied.  See the License for the
│ +# specific language governing permissions and limitations
│ +# under the License.
│ +
│ +# -----------------------------------------------------------------------------
│ +# Apache Maven Debug Script
│ +#
│ +# Environment Variable Prerequisites
│ +#
│ +#   JAVA_HOME           Must point at your Java Development Kit installation.
│ +#   MAVEN_OPTS          (Optional) Java runtime options used when Maven is executed.
│ +#   MAVEN_SKIP_RC       (Optional) Flag to disable loading of mavenrc files.
│ +#   MAVEN_DEBUG_ADDRESS (Optional) Set the debug address. Default value is 8000
│ +# -----------------------------------------------------------------------------
│ +
│ +MAVEN_DEBUG_OPTS="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=${MAVEN_DEBUG_ADDRESS:-8000}"
│ +
│ +echo Preparing to execute Maven in debug mode
│ +
│ +env MAVEN_OPTS="$MAVEN_OPTS" MAVEN_DEBUG_OPTS="$MAVEN_DEBUG_OPTS" "`dirname "$0"`/mvn" "$@"
├── apache-maven-3.8.2/apache-maven/src/bin/mvnyjp
│ @@ -1,35 +1,35 @@
│ -#!/bin/sh
│ -
│ -# Licensed to the Apache Software Foundation (ASF) under one
│ -# or more contributor license agreements.  See the NOTICE file
│ -# distributed with this work for additional information
│ -# regarding copyright ownership.  The ASF licenses this file
│ -# to you under the Apache License, Version 2.0 (the
│ -# "License"); you may not use this file except in compliance
│ -# with the License.  You may obtain a copy of the License at
│ -#
│ -#    http://www.apache.org/licenses/LICENSE-2.0
│ -#
│ -# Unless required by applicable law or agreed to in writing,
│ -# software distributed under the License is distributed on an
│ -# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
│ -# KIND, either express or implied.  See the License for the
│ -# specific language governing permissions and limitations
│ -# under the License.
│ -
│ -# -----------------------------------------------------------------------------
│ -# Apache Maven YourKit Profiler Startup Script
│ -#
│ -# Environment Variable Prerequisites
│ -#
│ -#   JAVA_HOME       Must point at your Java Development Kit installation.
│ -#   MAVEN_OPTS      (Optional) Java runtime options used when Maven is executed.
│ -#   MAVEN_SKIP_RC   (Optional) Flag to disable loading of mavenrc files.
│ -# -----------------------------------------------------------------------------
│ -
│ -if [ ! -f "$YJPLIB" ]; then
│ -  echo "Error: Unable to autodetect the YJP library location. Please set YJPLIB variable" >&2
│ -  exit 1
│ -fi
│ -
│ -env MAVEN_OPTS="-agentpath:$YJPLIB=onexit=snapshot,onexit=memory,tracing,onlylocal $MAVEN_OPTS" "`dirname "$0"`/mvn" "$@"
│ +#!/bin/sh
│ +
│ +# Licensed to the Apache Software Foundation (ASF) under one
│ +# or more contributor license agreements.  See the NOTICE file
│ +# distributed with this work for additional information
│ +# regarding copyright ownership.  The ASF licenses this file
│ +# to you under the Apache License, Version 2.0 (the
│ +# "License"); you may not use this file except in compliance
│ +# with the License.  You may obtain a copy of the License at
│ +#
│ +#    http://www.apache.org/licenses/LICENSE-2.0
│ +#
│ +# Unless required by applicable law or agreed to in writing,
│ +# software distributed under the License is distributed on an
│ +# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
│ +# KIND, either express or implied.  See the License for the
│ +# specific language governing permissions and limitations
│ +# under the License.
│ +
│ +# -----------------------------------------------------------------------------
│ +# Apache Maven YourKit Profiler Startup Script
│ +#
│ +# Environment Variable Prerequisites
│ +#
│ +#   JAVA_HOME       Must point at your Java Development Kit installation.
│ +#   MAVEN_OPTS      (Optional) Java runtime options used when Maven is executed.
│ +#   MAVEN_SKIP_RC   (Optional) Flag to disable loading of mavenrc files.
│ +# -----------------------------------------------------------------------------
│ +
│ +if [ ! -f "$YJPLIB" ]; then
│ +  echo "Error: Unable to autodetect the YJP library location. Please set YJPLIB variable" >&2
│ +  exit 1
│ +fi
│ +
│ +env MAVEN_OPTS="-agentpath:$YJPLIB=onexit=snapshot,onexit=memory,tracing,onlylocal $MAVEN_OPTS" "`dirname "$0"`/mvn" "$@"

target/reference/apache-maven-3.8.2-src.tar.gz apache-maven/target/apache-maven-3.8.2-src.tar.gz
--- target/reference/apache-maven-3.8.2-src.tar.gz
+++ apache-maven/target/apache-maven-3.8.2-src.tar.gz
├── apache-maven-3.8.2-src.tar
│ ├── file list
│ │ @@ -1432,19 +1432,19 @@
│ │  -rw-r--r--   0 root         (0) root         (0)     7448 2021-08-04 18:57:55.000000 apache-maven-3.8.2/Jenkinsfile
│ │  -rw-r--r--   0 root         (0) root         (0)    11560 2021-08-04 18:57:55.000000 apache-maven-3.8.2/LICENSE
│ │  -rw-r--r--   0 root         (0) root         (0)      171 2021-08-04 18:57:55.000000 apache-maven-3.8.2/NOTICE
│ │  -rw-r--r--   0 root         (0) root         (0)     4206 2021-08-04 18:57:55.000000 apache-maven-3.8.2/README.md
│ │  -rw-r--r--   0 root         (0) root         (0)     2612 2021-08-04 18:57:55.000000 apache-maven-3.8.2/apache-maven/README.txt
│ │  -rw-r--r--   0 root         (0) root         (0)    10582 2021-08-04 18:57:55.000000 apache-maven-3.8.2/apache-maven/pom.xml
│ │  -rw-r--r--   0 root         (0) root         (0)      228 2021-08-04 18:57:55.000000 apache-maven-3.8.2/apache-maven/src/bin/m2.conf
│ │ --rw-r--r--   0 root         (0) root         (0)     5703 2021-08-04 18:57:55.000000 apache-maven-3.8.2/apache-maven/src/bin/mvn
│ │ +-rw-r--r--   0 root         (0) root         (0)     5904 2021-08-04 18:57:55.000000 apache-maven-3.8.2/apache-maven/src/bin/mvn
│ │  -rw-r--r--   0 root         (0) root         (0)     6165 2021-08-04 18:57:55.000000 apache-maven-3.8.2/apache-maven/src/bin/mvn.cmd
│ │ --rw-r--r--   0 root         (0) root         (0)     1601 2021-08-04 18:57:55.000000 apache-maven-3.8.2/apache-maven/src/bin/mvnDebug
│ │ +-rw-r--r--   0 root         (0) root         (0)     1636 2021-08-04 18:57:55.000000 apache-maven-3.8.2/apache-maven/src/bin/mvnDebug
│ │  -rw-r--r--   0 root         (0) root         (0)     2082 2021-08-04 18:57:55.000000 apache-maven-3.8.2/apache-maven/src/bin/mvnDebug.cmd
│ │ --rw-r--r--   0 root         (0) root         (0)     1532 2021-08-04 18:57:55.000000 apache-maven-3.8.2/apache-maven/src/bin/mvnyjp
│ │ +-rw-r--r--   0 root         (0) root         (0)     1567 2021-08-04 18:57:55.000000 apache-maven-3.8.2/apache-maven/src/bin/mvnyjp
│ │  -rw-r--r--   0 root         (0) root         (0)     1551 2021-08-04 18:57:55.000000 apache-maven-3.8.2/apache-maven/src/conf/logging/simplelogger.properties
│ │  -rw-r--r--   0 root         (0) root         (0)    10742 2021-08-04 18:57:55.000000 apache-maven-3.8.2/apache-maven/src/conf/settings.xml
│ │  -rw-r--r--   0 root         (0) root         (0)     3747 2021-08-04 18:57:55.000000 apache-maven-3.8.2/apache-maven/src/conf/toolchains.xml
│ │  -rw-r--r--   0 root         (0) root         (0)      154 2021-08-04 18:57:55.000000 apache-maven-3.8.2/apache-maven/src/lib/ext/README.txt
│ │  -rw-r--r--   0 root         (0) root         (0)     3941 2021-08-04 18:57:55.000000 apache-maven-3.8.2/apache-maven/src/main/appended-resources/META-INF/LICENSE.vm
│ │  -rw-r--r--   0 root         (0) root         (0)     5783 2021-08-04 18:57:55.000000 apache-maven-3.8.2/apache-maven/src/main/appended-resources/META-INF/NOTICE.vm
│ │  -rw-r--r--   0 root         (0) root         (0)    11560 2021-08-04 18:57:55.000000 apache-maven-3.8.2/apache-maven/src/main/appended-resources/licenses/ASL-2.0.txt
│ ├── apache-maven-3.8.2/apache-maven/src/bin/mvn
│ │ @@ -1,201 +1,201 @@
│ │ -#!/bin/sh
│ │ -
│ │ -# Licensed to the Apache Software Foundation (ASF) under one
│ │ -# or more contributor license agreements.  See the NOTICE file
│ │ -# distributed with this work for additional information
│ │ -# regarding copyright ownership.  The ASF licenses this file
│ │ -# to you under the Apache License, Version 2.0 (the
│ │ -# "License"); you may not use this file except in compliance
│ │ -# with the License.  You may obtain a copy of the License at
│ │ -#
│ │ -#    http://www.apache.org/licenses/LICENSE-2.0
│ │ -#
│ │ -# Unless required by applicable law or agreed to in writing,
│ │ -# software distributed under the License is distributed on an
│ │ -# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
│ │ -# KIND, either express or implied.  See the License for the
│ │ -# specific language governing permissions and limitations
│ │ -# under the License.
│ │ -
│ │ -# -----------------------------------------------------------------------------
│ │ -# Apache Maven Startup Script
│ │ -#
│ │ -# Environment Variable Prerequisites
│ │ -#
│ │ -#   JAVA_HOME       Must point at your Java Development Kit installation.
│ │ -#   MAVEN_OPTS      (Optional) Java runtime options used when Maven is executed.
│ │ -#   MAVEN_SKIP_RC   (Optional) Flag to disable loading of mavenrc files.
│ │ -# -----------------------------------------------------------------------------
│ │ -
│ │ -if [ -z "$MAVEN_SKIP_RC" ] ; then
│ │ -
│ │ -  if [ -f /usr/local/etc/mavenrc ] ; then
│ │ -    . /usr/local/etc/mavenrc
│ │ -  fi
│ │ -
│ │ -  if [ -f /etc/mavenrc ] ; then
│ │ -    . /etc/mavenrc
│ │ -  fi
│ │ -
│ │ -  if [ -f "$HOME/.mavenrc" ] ; then
│ │ -    . "$HOME/.mavenrc"
│ │ -  fi
│ │ -
│ │ -fi
│ │ -
│ │ -# OS specific support. $var _must_ be set to either true or false.
│ │ -cygwin=false;
│ │ -mingw=false;
│ │ -case "`uname`" in
│ │ -  CYGWIN*) cygwin=true;;
│ │ -  MINGW*) mingw=true;;
│ │ -esac
│ │ -
│ │ -## resolve links - $0 may be a link to Maven's home
│ │ -PRG="$0"
│ │ -
│ │ -# need this for relative symlinks
│ │ -while [ -h "$PRG" ] ; do
│ │ -  ls=`ls -ld "$PRG"`
│ │ -  link=`expr "$ls" : '.*-> \(.*\)$'`
│ │ -  if expr "$link" : '/.*' > /dev/null; then
│ │ -    PRG="$link"
│ │ -  else
│ │ -    PRG="`dirname "$PRG"`/$link"
│ │ -  fi
│ │ -done
│ │ -
│ │ -saveddir=`pwd`
│ │ -
│ │ -MAVEN_HOME=`dirname "$PRG"`/..
│ │ -
│ │ -# make it fully qualified
│ │ -MAVEN_HOME=`cd "$MAVEN_HOME" && pwd`
│ │ -
│ │ -cd "$saveddir"
│ │ -
│ │ -# For Cygwin, ensure paths are in Unix format before anything is touched
│ │ -if $cygwin ; then
│ │ -  [ -n "$MAVEN_HOME" ] &&
│ │ -    MAVEN_HOME=`cygpath --unix "$MAVEN_HOME"`
│ │ -  [ -n "$JAVA_HOME" ] &&
│ │ -    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
│ │ -  [ -n "$CLASSPATH" ] &&
│ │ -    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
│ │ -fi
│ │ -
│ │ -# For MinGW, ensure paths are in Unix format before anything is touched
│ │ -if $mingw ; then
│ │ -  [ -n "$MAVEN_HOME" ] &&
│ │ -    MAVEN_HOME=`(cd "$MAVEN_HOME"; pwd)`
│ │ -  [ -n "$JAVA_HOME" ] &&
│ │ -    JAVA_HOME=`(cd "$JAVA_HOME"; pwd)`
│ │ -  # TODO classpath?
│ │ -fi
│ │ -
│ │ -if [ -z "$JAVA_HOME" ] ; then
│ │ -  JAVACMD=`which java`
│ │ -else
│ │ -  JAVACMD="$JAVA_HOME/bin/java"
│ │ -fi
│ │ -
│ │ -if [ ! -x "$JAVACMD" ] ; then
│ │ -  echo "The JAVA_HOME environment variable is not defined correctly," >&2
│ │ -  echo "this environment variable is needed to run this program." >&2
│ │ -  exit 1
│ │ -fi
│ │ -
│ │ -CLASSWORLDS_JAR=`echo "${MAVEN_HOME}"/boot/plexus-classworlds-*.jar`
│ │ -CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher
│ │ -
│ │ -# For Cygwin, switch paths to Windows format before running java
│ │ -if $cygwin ; then
│ │ -  [ -n "$MAVEN_HOME" ] &&
│ │ -    MAVEN_HOME=`cygpath --path --windows "$MAVEN_HOME"`
│ │ -  [ -n "$JAVA_HOME" ] &&
│ │ -    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
│ │ -  [ -n "$CLASSPATH" ] &&
│ │ -    CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
│ │ -  [ -n "$CLASSWORLDS_JAR" ] &&
│ │ -    CLASSWORLDS_JAR=`cygpath --path --windows "$CLASSWORLDS_JAR"`
│ │ -fi
│ │ -
│ │ -# traverses directory structure from process work directory to filesystem root
│ │ -# first directory with .mvn subdirectory is considered project base directory
│ │ -find_maven_basedir() {
│ │ -(
│ │ -  basedir=`find_file_argument_basedir "$@"`
│ │ -  wdir="${basedir}"
│ │ -  while [ "$wdir" != '/' ] ; do
│ │ -    if [ -d "$wdir"/.mvn ] ; then
│ │ -      basedir=$wdir
│ │ -      break
│ │ -    fi
│ │ -    wdir=`cd "$wdir/.."; pwd`
│ │ -  done
│ │ -  echo "${basedir}"
│ │ -)
│ │ -}
│ │ -
│ │ -find_file_argument_basedir() {
│ │ -(
│ │ -  basedir=`pwd`
│ │ -
│ │ -  found_file_switch=0
│ │ -  for arg in "$@"; do
│ │ -    if [ ${found_file_switch} -eq 1 ]; then
│ │ -      if [ -d "${arg}" ]; then
│ │ -        basedir=`cd "${arg}" && pwd -P`
│ │ -      elif [ -f "${arg}" ]; then
│ │ -        basedir=`dirname "${arg}"`
│ │ -        basedir=`cd "${basedir}" && pwd -P`
│ │ -        if [ ! -d "${basedir}" ]; then
│ │ -          echo "Directory ${basedir} extracted from the -f/--file command-line argument ${arg} does not exist" >&2
│ │ -          exit 1
│ │ -        fi
│ │ -      else
│ │ -        echo "POM file ${arg} specified with the -f/--file command line argument does not exist" >&2
│ │ -        exit 1
│ │ -      fi
│ │ -      break
│ │ -    fi
│ │ -    if [ "$arg" = "-f" -o "$arg" = "--file" ]; then
│ │ -      found_file_switch=1
│ │ -    fi
│ │ -  done
│ │ -  echo "${basedir}"
│ │ -)
│ │ -}
│ │ -
│ │ -# concatenates all lines of a file
│ │ -concat_lines() {
│ │ -  if [ -f "$1" ]; then
│ │ -    echo "`tr -s '\r\n' '  ' < "$1"`"
│ │ -  fi
│ │ -}
│ │ -
│ │ -MAVEN_PROJECTBASEDIR="${MAVEN_BASEDIR:-`find_maven_basedir "$@"`}"
│ │ -MAVEN_OPTS="`concat_lines "$MAVEN_PROJECTBASEDIR/.mvn/jvm.config"` $MAVEN_OPTS"
│ │ -
│ │ -# For Cygwin, switch project base directory path to Windows format before
│ │ -# executing Maven otherwise this will cause Maven not to consider it.
│ │ -if $cygwin ; then
│ │ -  [ -n "$MAVEN_PROJECTBASEDIR" ] &&
│ │ -  MAVEN_PROJECTBASEDIR=`cygpath --path --windows "$MAVEN_PROJECTBASEDIR"`
│ │ -fi
│ │ -
│ │ -export MAVEN_PROJECTBASEDIR
│ │ -
│ │ -# Provide a "standardized" way to retrieve the CLI args that will
│ │ -# work with both Windows and non-Windows executions.
│ │ -MAVEN_CMD_LINE_ARGS="$MAVEN_CONFIG $@"
│ │ -export MAVEN_CMD_LINE_ARGS
│ │ -
│ │ -exec "$JAVACMD" \
│ │ -  $MAVEN_OPTS \
│ │ -  $MAVEN_DEBUG_OPTS \
│ │ -  -classpath "${CLASSWORLDS_JAR}" \
│ │ -  "-Dclassworlds.conf=${MAVEN_HOME}/bin/m2.conf" \
│ │ -  "-Dmaven.home=${MAVEN_HOME}" \
│ │ -  "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" \
│ │ -  ${CLASSWORLDS_LAUNCHER} "$@"
│ │ +#!/bin/sh
│ │ +
│ │ +# Licensed to the Apache Software Foundation (ASF) under one
│ │ +# or more contributor license agreements.  See the NOTICE file
│ │ +# distributed with this work for additional information
│ │ +# regarding copyright ownership.  The ASF licenses this file
│ │ +# to you under the Apache License, Version 2.0 (the
│ │ +# "License"); you may not use this file except in compliance
│ │ +# with the License.  You may obtain a copy of the License at
│ │ +#
│ │ +#    http://www.apache.org/licenses/LICENSE-2.0
│ │ +#
│ │ +# Unless required by applicable law or agreed to in writing,
│ │ +# software distributed under the License is distributed on an
│ │ +# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
│ │ +# KIND, either express or implied.  See the License for the
│ │ +# specific language governing permissions and limitations
│ │ +# under the License.
│ │ +
│ │ +# -----------------------------------------------------------------------------
│ │ +# Apache Maven Startup Script
│ │ +#
│ │ +# Environment Variable Prerequisites
│ │ +#
│ │ +#   JAVA_HOME       Must point at your Java Development Kit installation.
│ │ +#   MAVEN_OPTS      (Optional) Java runtime options used when Maven is executed.
│ │ +#   MAVEN_SKIP_RC   (Optional) Flag to disable loading of mavenrc files.
│ │ +# -----------------------------------------------------------------------------
│ │ +
│ │ +if [ -z "$MAVEN_SKIP_RC" ] ; then
│ │ +
│ │ +  if [ -f /usr/local/etc/mavenrc ] ; then
│ │ +    . /usr/local/etc/mavenrc
│ │ +  fi
│ │ +
│ │ +  if [ -f /etc/mavenrc ] ; then
│ │ +    . /etc/mavenrc
│ │ +  fi
│ │ +
│ │ +  if [ -f "$HOME/.mavenrc" ] ; then
│ │ +    . "$HOME/.mavenrc"
│ │ +  fi
│ │ +
│ │ +fi
│ │ +
│ │ +# OS specific support. $var _must_ be set to either true or false.
│ │ +cygwin=false;
│ │ +mingw=false;
│ │ +case "`uname`" in
│ │ +  CYGWIN*) cygwin=true;;
│ │ +  MINGW*) mingw=true;;
│ │ +esac
│ │ +
│ │ +## resolve links - $0 may be a link to Maven's home
│ │ +PRG="$0"
│ │ +
│ │ +# need this for relative symlinks
│ │ +while [ -h "$PRG" ] ; do
│ │ +  ls=`ls -ld "$PRG"`
│ │ +  link=`expr "$ls" : '.*-> \(.*\)$'`
│ │ +  if expr "$link" : '/.*' > /dev/null; then
│ │ +    PRG="$link"
│ │ +  else
│ │ +    PRG="`dirname "$PRG"`/$link"
│ │ +  fi
│ │ +done
│ │ +
│ │ +saveddir=`pwd`
│ │ +
│ │ +MAVEN_HOME=`dirname "$PRG"`/..
│ │ +
│ │ +# make it fully qualified
│ │ +MAVEN_HOME=`cd "$MAVEN_HOME" && pwd`
│ │ +
│ │ +cd "$saveddir"
│ │ +
│ │ +# For Cygwin, ensure paths are in Unix format before anything is touched
│ │ +if $cygwin ; then
│ │ +  [ -n "$MAVEN_HOME" ] &&
│ │ +    MAVEN_HOME=`cygpath --unix "$MAVEN_HOME"`
│ │ +  [ -n "$JAVA_HOME" ] &&
│ │ +    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
│ │ +  [ -n "$CLASSPATH" ] &&
│ │ +    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
│ │ +fi
│ │ +
│ │ +# For MinGW, ensure paths are in Unix format before anything is touched
│ │ +if $mingw ; then
│ │ +  [ -n "$MAVEN_HOME" ] &&
│ │ +    MAVEN_HOME=`(cd "$MAVEN_HOME"; pwd)`
│ │ +  [ -n "$JAVA_HOME" ] &&
│ │ +    JAVA_HOME=`(cd "$JAVA_HOME"; pwd)`
│ │ +  # TODO classpath?
│ │ +fi
│ │ +
│ │ +if [ -z "$JAVA_HOME" ] ; then
│ │ +  JAVACMD=`which java`
│ │ +else
│ │ +  JAVACMD="$JAVA_HOME/bin/java"
│ │ +fi
│ │ +
│ │ +if [ ! -x "$JAVACMD" ] ; then
│ │ +  echo "The JAVA_HOME environment variable is not defined correctly," >&2
│ │ +  echo "this environment variable is needed to run this program." >&2
│ │ +  exit 1
│ │ +fi
│ │ +
│ │ +CLASSWORLDS_JAR=`echo "${MAVEN_HOME}"/boot/plexus-classworlds-*.jar`
│ │ +CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher
│ │ +
│ │ +# For Cygwin, switch paths to Windows format before running java
│ │ +if $cygwin ; then
│ │ +  [ -n "$MAVEN_HOME" ] &&
│ │ +    MAVEN_HOME=`cygpath --path --windows "$MAVEN_HOME"`
│ │ +  [ -n "$JAVA_HOME" ] &&
│ │ +    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
│ │ +  [ -n "$CLASSPATH" ] &&
│ │ +    CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
│ │ +  [ -n "$CLASSWORLDS_JAR" ] &&
│ │ +    CLASSWORLDS_JAR=`cygpath --path --windows "$CLASSWORLDS_JAR"`
│ │ +fi
│ │ +
│ │ +# traverses directory structure from process work directory to filesystem root
│ │ +# first directory with .mvn subdirectory is considered project base directory
│ │ +find_maven_basedir() {
│ │ +(
│ │ +  basedir=`find_file_argument_basedir "$@"`
│ │ +  wdir="${basedir}"
│ │ +  while [ "$wdir" != '/' ] ; do
│ │ +    if [ -d "$wdir"/.mvn ] ; then
│ │ +      basedir=$wdir
│ │ +      break
│ │ +    fi
│ │ +    wdir=`cd "$wdir/.."; pwd`
│ │ +  done
│ │ +  echo "${basedir}"
│ │ +)
│ │ +}
│ │ +
│ │ +find_file_argument_basedir() {
│ │ +(
│ │ +  basedir=`pwd`
│ │ +
│ │ +  found_file_switch=0
│ │ +  for arg in "$@"; do
│ │ +    if [ ${found_file_switch} -eq 1 ]; then
│ │ +      if [ -d "${arg}" ]; then
│ │ +        basedir=`cd "${arg}" && pwd -P`
│ │ +      elif [ -f "${arg}" ]; then
│ │ +        basedir=`dirname "${arg}"`
│ │ +        basedir=`cd "${basedir}" && pwd -P`
│ │ +        if [ ! -d "${basedir}" ]; then
│ │ +          echo "Directory ${basedir} extracted from the -f/--file command-line argument ${arg} does not exist" >&2
│ │ +          exit 1
│ │ +        fi
│ │ +      else
│ │ +        echo "POM file ${arg} specified with the -f/--file command line argument does not exist" >&2
│ │ +        exit 1
│ │ +      fi
│ │ +      break
│ │ +    fi
│ │ +    if [ "$arg" = "-f" -o "$arg" = "--file" ]; then
│ │ +      found_file_switch=1
│ │ +    fi
│ │ +  done
│ │ +  echo "${basedir}"
│ │ +)
│ │ +}
│ │ +
│ │ +# concatenates all lines of a file
│ │ +concat_lines() {
│ │ +  if [ -f "$1" ]; then
│ │ +    echo "`tr -s '\r\n' '  ' < "$1"`"
│ │ +  fi
│ │ +}
│ │ +
│ │ +MAVEN_PROJECTBASEDIR="${MAVEN_BASEDIR:-`find_maven_basedir "$@"`}"
│ │ +MAVEN_OPTS="`concat_lines "$MAVEN_PROJECTBASEDIR/.mvn/jvm.config"` $MAVEN_OPTS"
│ │ +
│ │ +# For Cygwin, switch project base directory path to Windows format before
│ │ +# executing Maven otherwise this will cause Maven not to consider it.
│ │ +if $cygwin ; then
│ │ +  [ -n "$MAVEN_PROJECTBASEDIR" ] &&
│ │ +  MAVEN_PROJECTBASEDIR=`cygpath --path --windows "$MAVEN_PROJECTBASEDIR"`
│ │ +fi
│ │ +
│ │ +export MAVEN_PROJECTBASEDIR
│ │ +
│ │ +# Provide a "standardized" way to retrieve the CLI args that will
│ │ +# work with both Windows and non-Windows executions.
│ │ +MAVEN_CMD_LINE_ARGS="$MAVEN_CONFIG $@"
│ │ +export MAVEN_CMD_LINE_ARGS
│ │ +
│ │ +exec "$JAVACMD" \
│ │ +  $MAVEN_OPTS \
│ │ +  $MAVEN_DEBUG_OPTS \
│ │ +  -classpath "${CLASSWORLDS_JAR}" \
│ │ +  "-Dclassworlds.conf=${MAVEN_HOME}/bin/m2.conf" \
│ │ +  "-Dmaven.home=${MAVEN_HOME}" \
│ │ +  "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" \
│ │ +  ${CLASSWORLDS_LAUNCHER} "$@"
│ ├── apache-maven-3.8.2/apache-maven/src/bin/mvnDebug
│ │ @@ -1,35 +1,35 @@
│ │ -#!/bin/sh
│ │ -
│ │ -# Licensed to the Apache Software Foundation (ASF) under one
│ │ -# or more contributor license agreements.  See the NOTICE file
│ │ -# distributed with this work for additional information
│ │ -# regarding copyright ownership.  The ASF licenses this file
│ │ -# to you under the Apache License, Version 2.0 (the
│ │ -# "License"); you may not use this file except in compliance
│ │ -# with the License.  You may obtain a copy of the License at
│ │ -#
│ │ -#    http://www.apache.org/licenses/LICENSE-2.0
│ │ -#
│ │ -# Unless required by applicable law or agreed to in writing,
│ │ -# software distributed under the License is distributed on an
│ │ -# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
│ │ -# KIND, either express or implied.  See the License for the
│ │ -# specific language governing permissions and limitations
│ │ -# under the License.
│ │ -
│ │ -# -----------------------------------------------------------------------------
│ │ -# Apache Maven Debug Script
│ │ -#
│ │ -# Environment Variable Prerequisites
│ │ -#
│ │ -#   JAVA_HOME           Must point at your Java Development Kit installation.
│ │ -#   MAVEN_OPTS          (Optional) Java runtime options used when Maven is executed.
│ │ -#   MAVEN_SKIP_RC       (Optional) Flag to disable loading of mavenrc files.
│ │ -#   MAVEN_DEBUG_ADDRESS (Optional) Set the debug address. Default value is 8000
│ │ -# -----------------------------------------------------------------------------
│ │ -
│ │ -MAVEN_DEBUG_OPTS="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=${MAVEN_DEBUG_ADDRESS:-8000}"
│ │ -
│ │ -echo Preparing to execute Maven in debug mode
│ │ -
│ │ -env MAVEN_OPTS="$MAVEN_OPTS" MAVEN_DEBUG_OPTS="$MAVEN_DEBUG_OPTS" "`dirname "$0"`/mvn" "$@"
│ │ +#!/bin/sh
│ │ +
│ │ +# Licensed to the Apache Software Foundation (ASF) under one
│ │ +# or more contributor license agreements.  See the NOTICE file
│ │ +# distributed with this work for additional information
│ │ +# regarding copyright ownership.  The ASF licenses this file
│ │ +# to you under the Apache License, Version 2.0 (the
│ │ +# "License"); you may not use this file except in compliance
│ │ +# with the License.  You may obtain a copy of the License at
│ │ +#
│ │ +#    http://www.apache.org/licenses/LICENSE-2.0
│ │ +#
│ │ +# Unless required by applicable law or agreed to in writing,
│ │ +# software distributed under the License is distributed on an
│ │ +# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
│ │ +# KIND, either express or implied.  See the License for the
│ │ +# specific language governing permissions and limitations
│ │ +# under the License.
│ │ +
│ │ +# -----------------------------------------------------------------------------
│ │ +# Apache Maven Debug Script
│ │ +#
│ │ +# Environment Variable Prerequisites
│ │ +#
│ │ +#   JAVA_HOME           Must point at your Java Development Kit installation.
│ │ +#   MAVEN_OPTS          (Optional) Java runtime options used when Maven is executed.
│ │ +#   MAVEN_SKIP_RC       (Optional) Flag to disable loading of mavenrc files.
│ │ +#   MAVEN_DEBUG_ADDRESS (Optional) Set the debug address. Default value is 8000
│ │ +# -----------------------------------------------------------------------------
│ │ +
│ │ +MAVEN_DEBUG_OPTS="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=${MAVEN_DEBUG_ADDRESS:-8000}"
│ │ +
│ │ +echo Preparing to execute Maven in debug mode
│ │ +
│ │ +env MAVEN_OPTS="$MAVEN_OPTS" MAVEN_DEBUG_OPTS="$MAVEN_DEBUG_OPTS" "`dirname "$0"`/mvn" "$@"
│ ├── apache-maven-3.8.2/apache-maven/src/bin/mvnyjp
│ │ @@ -1,35 +1,35 @@
│ │ -#!/bin/sh
│ │ -
│ │ -# Licensed to the Apache Software Foundation (ASF) under one
│ │ -# or more contributor license agreements.  See the NOTICE file
│ │ -# distributed with this work for additional information
│ │ -# regarding copyright ownership.  The ASF licenses this file
│ │ -# to you under the Apache License, Version 2.0 (the
│ │ -# "License"); you may not use this file except in compliance
│ │ -# with the License.  You may obtain a copy of the License at
│ │ -#
│ │ -#    http://www.apache.org/licenses/LICENSE-2.0
│ │ -#
│ │ -# Unless required by applicable law or agreed to in writing,
│ │ -# software distributed under the License is distributed on an
│ │ -# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
│ │ -# KIND, either express or implied.  See the License for the
│ │ -# specific language governing permissions and limitations
│ │ -# under the License.
│ │ -
│ │ -# -----------------------------------------------------------------------------
│ │ -# Apache Maven YourKit Profiler Startup Script
│ │ -#
│ │ -# Environment Variable Prerequisites
│ │ -#
│ │ -#   JAVA_HOME       Must point at your Java Development Kit installation.
│ │ -#   MAVEN_OPTS      (Optional) Java runtime options used when Maven is executed.
│ │ -#   MAVEN_SKIP_RC   (Optional) Flag to disable loading of mavenrc files.
│ │ -# -----------------------------------------------------------------------------
│ │ -
│ │ -if [ ! -f "$YJPLIB" ]; then
│ │ -  echo "Error: Unable to autodetect the YJP library location. Please set YJPLIB variable" >&2
│ │ -  exit 1
│ │ -fi
│ │ -
│ │ -env MAVEN_OPTS="-agentpath:$YJPLIB=onexit=snapshot,onexit=memory,tracing,onlylocal $MAVEN_OPTS" "`dirname "$0"`/mvn" "$@"
│ │ +#!/bin/sh
│ │ +
│ │ +# Licensed to the Apache Software Foundation (ASF) under one
│ │ +# or more contributor license agreements.  See the NOTICE file
│ │ +# distributed with this work for additional information
│ │ +# regarding copyright ownership.  The ASF licenses this file
│ │ +# to you under the Apache License, Version 2.0 (the
│ │ +# "License"); you may not use this file except in compliance
│ │ +# with the License.  You may obtain a copy of the License at
│ │ +#
│ │ +#    http://www.apache.org/licenses/LICENSE-2.0
│ │ +#
│ │ +# Unless required by applicable law or agreed to in writing,
│ │ +# software distributed under the License is distributed on an
│ │ +# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
│ │ +# KIND, either express or implied.  See the License for the
│ │ +# specific language governing permissions and limitations
│ │ +# under the License.
│ │ +
│ │ +# -----------------------------------------------------------------------------
│ │ +# Apache Maven YourKit Profiler Startup Script
│ │ +#
│ │ +# Environment Variable Prerequisites
│ │ +#
│ │ +#   JAVA_HOME       Must point at your Java Development Kit installation.
│ │ +#   MAVEN_OPTS      (Optional) Java runtime options used when Maven is executed.
│ │ +#   MAVEN_SKIP_RC   (Optional) Flag to disable loading of mavenrc files.
│ │ +# -----------------------------------------------------------------------------
│ │ +
│ │ +if [ ! -f "$YJPLIB" ]; then
│ │ +  echo "Error: Unable to autodetect the YJP library location. Please set YJPLIB variable" >&2
│ │ +  exit 1
│ │ +fi
│ │ +
│ │ +env MAVEN_OPTS="-agentpath:$YJPLIB=onexit=snapshot,onexit=memory,tracing,onlylocal $MAVEN_OPTS" "`dirname "$0"`/mvn" "$@"

